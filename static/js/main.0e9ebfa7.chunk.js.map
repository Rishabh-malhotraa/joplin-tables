{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","handleClickOutside","event","wrapperRef","contains","target","setState","isTableVisible","_onMouseMove","table","refs","tableEl","height","clientHeight","width","clientWidth","obj","getBoundingClientRect","x","clientX","left","y","clientY","top","oX","Math","floor","oY","i","rows","length","j","cells","state","style","background","markdownTable","array","str","push","join","console","log","document","querySelector","innerHTML","toggleBox","prevState","setWrapperRef","bind","addEventListener","this","removeEventListener","node","className","onClick","ref","onMouseMove","onMouseOut","_onMouseOut","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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AAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,MAEJ,4BACI,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,MAEJ,4BACI,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,MAEJ,4BACI,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,MAEJ,4BACI,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,MAEJ,4BACI,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,MAEJ,4BACI,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,MAEJ,4BACI,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,MAEJ,4BACI,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,KACA,wBAAImB,QAASJ,KAAKf,eAAlB,QAIZ,uBAAGkB,UAAU,MAAb,QACUjC,EADV,YACsBH,U,GArP5B0C,IAAMC,YCSJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,EAAD,MACFzB,SAAS0B,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpC,QAAQoC,MAAMA,EAAMC,a","file":"static/js/main.0e9ebfa7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: 0,\n            y: 0,\n            isTableVisible: true,\n        };\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n    handleClickOutside = (event) => {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState({ isTableVisible: false });\n        }\n    };\n\n    _onMouseMove = (event) => {\n        const table = this.refs.tableEl;\n        const height = this.refs.tableEl.clientHeight;\n        const width = this.refs.tableEl.clientWidth;\n\n        // we can just you event.offsetX which give the relative position of the mouse with respect to\n        // the div as here we are dealing with neseted elements and not a plain div, a table has <tr> and\n        // <td> elements which confuses react, which element is the point of reference, more info:\n        // https://stackoverflow.com/questions/3234256/find-mouse-position-relative-to-element\n\n        const obj = this.refs.tableEl.getBoundingClientRect();\n        const x = event.clientX - obj.left; //x position within the element.\n        const y = event.clientY - obj.top; //y position within the element.\n\n        let oX = Math.floor((x / width) * 10) + 1;\n        let oY = Math.floor((y / height) * 10) + 1;\n        //   console.log(`X->${event.nativeEvent.offsetX} Y->${event.nativeEvent.offsetY}`);\n\n        this.setState({ x: oX, y: oY });\n        // console.log(this.refs);\n        if (this.refs.tableEl) {\n            for (var i = 0; i < table.rows.length; i++) {\n                for (var j = 0; j < table.rows[i].cells.length; j++) {\n                    if (i < this.state.y && j < this.state.x) {\n                        // console.log('do we ever come here')\n                        table.rows[i].cells[j].style.background = \"#def\";\n                    } else {\n                        table.rows[i].cells[j].style.background = \"white\";\n                    }\n                }\n            }\n        }\n    };\n\n    markdownTable = () => {\n        let array = [];\n        let str = \"\",\n            i = 0,\n            j = 0;\n        // every table should have a heading\n        for (i = 1; i <= 2; i++) {\n            for (j = 1; j <= this.state.x; j++) {\n                str += i === 1 ? \"|     \" : \"| --- \";\n            }\n            str += \"|\";\n            array.push(str);\n            str = \"\";\n        }\n\n        for (i = 1; i <= this.state.y; i++) {\n            for (j = 1; j <= this.state.x; j++) {\n                str += \"|     \";\n            }\n            str += \"|\";\n            array.push(str);\n            str = \"\";\n        }\n        str = array.join(\"\\n\");\n        console.log(str);\n        document.querySelector(\".txt\").innerHTML = str;\n        this.toggleBox();\n    };\n\n    toggleBox = () => {\n        this.setState((prevState) => ({\n            isTableVisible: !prevState.isTableVisible,\n        }));\n    };\n\n    render() {\n        const { x, y, isTableVisible } = this.state;\n\n        return (\n            <div>\n\t\t\t\t<h2>Joplin markdown-table-generator draft 1 ðŸŽ‰ðŸŽ‰</h2>\n               <div className='txtDiv'><textarea className=\"txt\"></textarea></div> \n                <div className=\"dropdown\">\n                    <button className=\"dropdownButton\" onClick={this.toggleBox}>\n                        <i className=\"fa fa-table 3x\"></i>\n                    </button>\n\n                    <div\n                        className={`tablecontainer ${\n                            isTableVisible ? \"\" : \"hidden\"\n                        }`}\n                        ref={this.setWrapperRef}\n                    >\n                        <table\n                            className=\"tableEl\"\n                            onMouseMove={this._onMouseMove}\n                            onMouseOut={this._onMouseOut}\n                            ref=\"tableEl\"\n                        >\n                            <tbody>\n                                <tr>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                </tr>\n                                <tr>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                </tr>\n                                <tr>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                </tr>\n                                <tr>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                </tr>\n                                <tr>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                </tr>\n                                <tr>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                </tr>\n                                <tr>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                </tr>\n                                <tr>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                </tr>\n                                <tr>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                </tr>\n                                <tr>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                    <td onClick={this.markdownTable}> </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        <p className=\"rc\">\n                            Rows:{y} Columns:{x}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}